{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectLists.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignOutLinks","state","console","log","firebase","links","uid","SignedOutLinks","ProjectSummary","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gPAyBeA,cAAQ,MANI,SAACC,GACxB,MAAM,CAEFC,QAAS,kBAAMD,GCLZ,SAACA,EAASE,EAAV,IACcC,EADqB,EAAfA,eAGdC,OAAOH,UAAUI,MAAK,WAC3BL,EAAS,CAACM,KAAK,8BDIZP,EApBO,SAACQ,GACnB,OACI,6BACI,wBAAIC,UAAY,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,kBAAZ,gBACJ,4BAAI,uBAAGC,KAAO,UAAUC,QAASJ,EAAMN,SAAnC,YACJ,4BAAI,kBAAC,IAAD,CAASQ,GAAG,IAAID,UAAU,mCAAmCD,EAAMK,QAAQC,gBEGhFC,EAXM,WACjB,OACI,6BACI,wBAAIN,UAAY,SACZ,4BAAI,kBAAC,IAAD,CAASC,GAAG,WAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCkBLV,eAPS,SAACgB,GAErB,OADAC,QAAQC,IAAIF,GACN,CACFX,KAAMW,EAAMG,SAASd,KACrBQ,QAAQG,EAAMG,SAASN,WAGhBb,EApBA,SAACQ,GAAW,IAChBH,EAAiBG,EAAjBH,KAAKQ,EAAYL,EAAZK,QAENO,EAAQf,EAAKgB,IAAM,kBAAC,EAAD,CAAeR,QAASA,IAAc,kBAACS,EAAD,MAC/D,OACI,yBAAKb,UAAU,6BACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,aACCW,O,yDCAFG,EAXQ,SAAC,GAAc,IAAbC,EAAY,EAAZA,QACrB,OACI,yBAAKf,UAAU,kCACX,yBAAKA,UAAU,wCACX,0BAAMA,UAAU,cAAce,EAAQC,OACtC,wCAAcD,EAAQE,gBAAiBF,EAAQG,gBAC/C,uBAAGlB,UAAU,aAAamB,IAAOJ,EAAQK,UAAUC,UAAUC,eCW9DC,EAhBK,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAClB,OACI,yBAAKxB,UAAU,wBACVwB,GAAYA,EAASC,KAAI,SAAAV,GACtB,OAEI,kBAAC,IAAD,CAAMd,GAAI,YAAcc,EAAQW,GAAIC,IAAKZ,EAAQW,IAC7C,kBAAC,EAAD,CAAgBX,QAASA,UCclCa,EAtBO,SAAC7B,GAAU,IACtB8B,EAAiB9B,EAAjB8B,cACP,OACI,yBAAK7B,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAhB,iBACA,wBAAIA,UAAU,gBACT6B,GAAiBA,EAAcJ,KAAI,SAAAK,GAChC,OAAO,wBAAIH,IAAKG,EAAKJ,IACjB,0BAAM1B,UAAU,aAAa8B,EAAKC,KAAlC,KACA,8BAAOD,EAAKE,SACZ,yBAAKhC,UAAU,uBAAuBmB,IAAOW,EAAKG,KAAKZ,UAAUa,oB,gBCN1FC,E,iLACK,MAEiCC,KAAKrC,MAApCyB,EAFF,EAEEA,SAAS5B,EAFX,EAEWA,KAAKiC,EAFhB,EAEgBA,cACpB,OAAIjC,EAAKgB,IAGL,yBAAKZ,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAawB,SAAUA,KAE3B,yBAAKxB,UAAU,wBACX,kBAAC,EAAD,CAAe6B,cAAeA,OATzB,kBAAC,IAAD,CAAU5B,GAAG,gB,GAJjBoC,aA6BTC,cACZ/C,aAVqB,SAACgB,GAErB,MAAM,CACFiB,SAASjB,EAAMgC,UAAUC,QAAQhB,SACjC5B,KAAKW,EAAMG,SAASd,KACpBiC,cAActB,EAAMgC,UAAUC,QAAQX,kBAM3CY,2BAAiB,CACb,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJnDL,CAMbH,GCAYG,cACX/C,aAXoB,SAACgB,EAAMsC,GAE3B,IAAMnB,EAAKmB,EAASC,MAAMC,OAAOrB,GAC3BF,EAAWjB,EAAMgC,UAAUS,KAAKxB,SAEtC,MAAM,CACFT,QAFYS,EAAWA,EAASE,GAAM,KAGtC9B,KAAKW,EAAMG,SAASd,QAIA,MACxB6C,2BAAiB,CAAC,CACdC,WAAW,cAHJJ,EArCQ,SAACvC,GAAW,IACxBgB,EAAgBhB,EAAhBgB,QACP,OADuBhB,EAARH,KACLgB,IAEPG,EAEK,yBAAKf,UAAU,qCACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,cAAce,EAAQC,OACtC,2BAAID,EAAQiB,SACZ,yBAAKhC,UAAU,wCACX,0CAAgBe,EAAQE,gBAAiBF,EAAQG,gBACjD,6BAAMC,IAAOJ,EAAQK,UAAUC,UAAUC,gBAQzD,yBAAKtB,UAAU,oBACX,kDApBU,kBAAC,IAAD,CAAUC,GAAG,e,QCJjCgD,E,2MACJ1C,MAAQ,CACN2C,MAAO,GACPC,SAAU,I,EAEZC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAO7B,GAAK2B,EAAEE,OAAOC,S,EAG5BC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAK3D,MAAM4D,OAAO,EAAKpD,Q,wEAEf,IAAD,EACmB6B,KAAKrC,MAAvB6D,EADD,EACCA,UACR,OAFO,EACWhE,KACTgB,IAAY,kBAAC,IAAD,CAAUX,GAAG,MAGhC,yBAAKD,UAAU,aACb,0BAAMA,UAAU,QAAQ6D,SAAUzB,KAAKqB,cACrC,wBAAIzD,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACb,2BAAO8D,QAAQ,SAAf,SACA,2BAAOhE,KAAK,QAAQ4B,GAAG,QAAQqC,SAAU3B,KAAKgB,gBAEhD,yBAAKpD,UAAU,eACb,2BAAO8D,QAAQ,YAAf,YACA,2BAAOhE,KAAK,WAAW4B,GAAG,WAAWqC,SAAU3B,KAAKgB,gBAEtD,yBAAKpD,UAAU,eACb,4BAAQA,UAAU,gCAAlB,SACA,yBAAKA,UAAU,mBACX4D,EAAY,2BAAIA,GAAiB,a,GAjC5BvB,aAuDN9C,eAbS,SAACgB,GACvB,MAAM,CACJqD,UAAWrD,EAAMX,KAAKgE,UACtBhE,KAAMW,EAAMG,SAASd,SAIE,SAACJ,GAC1B,MAAO,CACLmE,OAAQ,SAACK,GAAD,OAAWxE,GRxDAyE,EQwDgBD,ERvD7B,SAACxE,EAAUE,EAAX,IAEeC,EAFuB,EAAjBA,eAIdC,OAAOsE,2BACZD,EAAYf,MACZe,EAAYd,UACdtD,MAAK,WACHL,EAAS,CAACM,KAAM,qBAEjBqE,OAAM,SAACC,GACN5E,EAAS,CAACM,KAAM,cAAcsE,cAZpB,IAACH,MQ4DR1E,CAA6C0D,GCvDtDoB,E,2MACF9D,MAAQ,CACJ2C,MAAM,GACNC,SAAS,GACTmB,UAAU,GACVC,SAAS,I,EAGbnB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAO7B,GAAI2B,EAAEE,OAAOC,S,EAG/BC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAK3D,MAAMyE,OAAO,EAAKjE,Q,wEAGjB,IAAD,EACoB6B,KAAKrC,MAAvBH,EADF,EACEA,KAAKgE,EADP,EACOA,UACZ,OAAGhE,EAAKgB,IAAY,kBAAC,IAAD,CAAUX,GAAI,MAG9B,yBAAKD,UAAU,aACX,0BAAMA,UAAU,QAAQ6D,SAAUzB,KAAKqB,cACnC,wBAAIzD,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACX,2BAAO8D,QAAQ,SAAf,SACA,2BAAOhE,KAAK,QAAQ4B,GAAG,QAAQqC,SAAU3B,KAAKgB,gBAGlD,yBAAKpD,UAAU,eACX,2BAAO8D,QAAQ,YAAf,YACA,2BAAOhE,KAAK,WAAW4B,GAAG,WAAWqC,SAAU3B,KAAKgB,gBAGxD,yBAAKpD,UAAU,eACX,2BAAO8D,QAAQ,aAAf,cACA,2BAAOhE,KAAK,OAAO4B,GAAG,YAAYqC,SAAU3B,KAAKgB,gBAGrD,yBAAKpD,UAAU,eACX,2BAAO8D,QAAQ,YAAf,aACA,2BAAOhE,KAAK,OAAO4B,GAAG,WAAWqC,SAAU3B,KAAKgB,gBAGpD,yBAAKpD,UAAU,eACX,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBACV4D,EAAY,2BAAIA,GAAe,a,GAjDvCvB,aAsEN9C,eAbS,SAACgB,GACrB,MAAM,CACFX,KAAMW,EAAMG,SAASd,KACrBgE,UAAUrD,EAAMX,KAAKgE,cAKH,SAACpE,GACvB,MAAO,CACJgF,OAAO,SAACC,GAAD,OAAajF,ET/CL,SAACiF,GACnB,OAAO,SAACjF,EAASE,EAAV,GAAmD,IAA/BC,EAA8B,EAA9BA,YAAY+E,EAAkB,EAAlBA,aAC7BhE,EAAWf,IACX4C,EAAYmC,IAElBhE,EAASd,OAAO+E,+BACZF,EAAQvB,MACRuB,EAAQtB,UACVtD,MAAK,SAAA+E,GACH,OAAOrC,EAAUG,WAAW,SAASmC,IAAID,EAAK7C,KAAKnB,KAAKkE,IAAI,CACxDR,UAAUG,EAAQH,UAClBC,SAAUE,EAAQF,SAClBlE,SAASoE,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAEtD1E,MAAK,WACJL,EAAS,CAACM,KAAM,sBACjBqE,OAAM,SAACC,GACN5E,EAAS,CAACM,KAAK,eAAesE,YS8BNI,CAAOC,QAG5BlF,CAA4C8E,G,8NC3EpD,IAAMU,EAAgB,SAAChE,GAC1B,OAAO,SAACvB,EAAUE,EAAX,GAAmD,EAA9BC,YAA+B,IAEjD4C,GAAYmC,EAFoC,EAAlBA,gBAG9BtE,EAAUV,IAAWgB,SAASN,QAC9B4E,EAAWtF,IAAWgB,SAASd,KAAKgB,IAC1CJ,QAAQC,IAAIL,GAEZmC,EAAUG,WAAW,YAAYuC,I,yVAAjC,IACOlE,EADP,CAEIE,gBAAgBb,EAAQkE,UACxBpD,eAAgBd,EAAQmE,SACxBS,SAASA,EACT5D,UAAW,IAAI8D,QAChBrF,MAAK,WACJL,EAAS,CAACM,KAAM,8BACjBqE,OAAM,SAAAC,GACL5E,EAAS,CAACM,KAAM,uBAAuBsE,aCX7Ce,E,2MACF5E,MAAQ,CACJS,MAAM,GACNgB,QAAQ,I,EAEZoB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAO7B,GAAI2B,EAAEE,OAAOC,S,EAG/BC,aAAe,SAACJ,GACZA,EAAEK,iBACFlD,QAAQC,IAAI,EAAKF,OACjB,EAAKR,MAAMgF,cAAc,EAAKxE,OAC9B,EAAKR,MAAMqF,QAAQC,KAAK,M,wEAKxB,OADcjD,KAAKrC,MAAbH,KACGgB,IAGL,yBAAKZ,UAAU,aACX,0BAAMA,UAAU,QAAQ6D,SAAUzB,KAAKqB,cACnC,wBAAIzD,UAAU,2BAAd,wBACA,yBAAKA,UAAU,eACX,2BAAOF,KAAK,OAAO4B,GAAG,QAAQqC,SAAU3B,KAAKgB,eAC7C,2BAAOU,QAAQ,SAAf,iBAGJ,yBAAK9D,UAAU,eACX,8BAAU0B,GAAG,UAAU1B,UAAU,uBAAuB+D,SAAU3B,KAAKgB,eACvE,2BAAOU,QAAQ,WAAf,oBAGJ,yBAAK9D,UAAU,eACX,4BAAQA,UAAU,sBAAlB,aAjBK,kBAAC,IAAD,CAAUC,GAAG,gB,GAnBdoC,aAsDb9C,eAXS,SAACgB,GACrB,MAAM,CACFX,KAAKW,EAAMG,SAASd,SAGD,SAAAJ,GACvB,MAAM,CACFuF,cAAe,SAAChE,GAAD,OAAavB,EAASuF,EAAchE,QAI5CxB,CAA4C4F,GClC5CG,EAlBH,WACV,OACE,kBAAC,IAAD,KACE,yBAAKtF,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuF,OAAK,EAACC,KAAK,IAAIC,UAAatD,IACnC,kBAAC,IAAD,CAAOqD,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAaxC,IACnC,kBAAC,IAAD,CAAOuC,KAAK,UAAUC,UAAapB,IACnC,kBAAC,IAAD,CAAOmB,KAAK,iBAAiBC,UAAaN,QCN9CQ,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjD,MACvB,2DAsCN,SAASkD,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTpG,MAAK,SAAAyG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjG,QACf4F,UAAUC,cAAcO,YAI1BnG,QAAQC,IACN,iHAKEyF,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB9F,QAAQC,IAAI,sCAGRyF,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BnC,OAAM,SAAA2C,GACLtG,QAAQsG,MAAM,4CAA6CA,M,yjBChGjE,IAAMC,EAAY,CACdnD,UAAU,MAqCCoD,EAlCK,WAA2B,IAA1BzG,EAAyB,uDAAnBwG,EAAUE,EAAS,uCAC1C,OAAOA,EAAOnH,MACV,IAAK,cAED,OADAU,QAAQC,IAAI,eACZ,KACOF,EADP,CAEIqD,UAAU,iBAElB,IAAK,gBAED,OADApD,QAAQC,IAAI,iBACN,CACFmD,UAAU,MAElB,IAAK,kBAED,OADApD,QAAQC,IAAI,mBACLF,EAEX,IAAK,iBAED,OADAC,QAAQC,IAAI,kBACZ,KACOF,EADP,CAEIqD,UAAU,OAElB,IAAK,eAED,OADApD,QAAQC,IAAI,gBACZ,KACOF,EADP,CAEIqD,UAAUqD,EAAO7C,IAAI8C,UAE7B,QACI,OAAO3G,IClCbwG,EAAY,CACdvF,SAAU,CACN,CAACE,GAAI,IAAKV,MAAO,qBAAsBgB,QAAS,kBAChD,CAACN,GAAI,IAAKV,MAAO,wBAAyBgB,QAAS,kBACnD,CAACN,GAAI,IAAKV,MAAO,sBAAuBgB,QAAS,oBAiB1CmF,EAbQ,WAA2B,IAA1B5G,EAAyB,uDAAnBwG,EAAUE,EAAS,uCAC7C,OAAQA,EAAOnH,MACX,IAAK,yBAED,OADAU,QAAQC,IAAI,0BACLF,EACX,IAAK,uBAED,OADAC,QAAQC,IAAI,wBACLF,EACX,QACI,OAAOA,I,QCJJ6G,EAPKC,YAAgB,CAChCzH,KAAKoH,EACLjG,QAAQoG,EACR5E,UAAU+E,mBACV5G,SAAS6G,oB,wCCGX7G,IAAS8G,cATE,CACTC,OAAQ,0CACRC,WAAY,4CACZC,YAAa,mDACbC,UAAW,4BACXC,cAAe,wCACfC,kBAAmB,iBAIrBpH,IAAS6B,YAAYwF,SAAS,IAEfrH,QAAf,ECHIsH,EAAQC,YAAYb,EACtB9E,YACI4F,YAAgBC,IAAMC,kBAAkB,CAACzI,0BAAa+E,+BACtD2D,6BAAmBC,EAAS,CAACC,YAAa,QAAQC,wBAAuB,EAAKC,mBAAkB,IAChGC,yBAAeJ,KAGvBN,EAAMW,oBAAoB9I,MAAK,WAC3B+I,IAASC,OAAO,kBAAC,IAAD,CAAUb,MAAOA,GAAO,kBAAC,EAAD,OAAoBc,SAASC,eAAe,YLCjF,SAAkB7C,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6C,IAAIC,GAAwBpD,OAAOC,SAAS5F,MACpDgJ,SAAWrD,OAAOC,SAASoD,OAIvC,OAGFrD,OAAOsD,iBAAiB,QAAQ,WAC9B,IAAMlD,EAAK,UAAMgD,GAAN,sBAEPtD,IAgEV,SAAiCM,EAAOC,GAEtCkD,MAAMnD,GACHpG,MAAK,SAAAwJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CvD,UAAUC,cAAcuD,MAAM9J,MAAK,SAAAyG,GACjCA,EAAasD,aAAa/J,MAAK,WAC7BgG,OAAOC,SAAS+D,eAKpB7D,EAAgBC,EAAOC,MAG1B/B,OAAM,WACL3D,QAAQC,IACN,oEArFAqJ,CAAwB7D,EAAOC,GAI/BC,UAAUC,cAAcuD,MAAM9J,MAAK,WACjCW,QAAQC,IACN,iHAMJuF,EAAgBC,EAAOC,OKtB/BE,K","file":"static/js/main.7e66b588.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className = \"right\">\r\n                <li><NavLink to='/CreateProject'>New Project</NavLink></li>\r\n                <li><a href = '/signin' onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}\r\n                </NavLink></li>\r\n            </ul>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        //what does \"()\" mean\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\r\n    return(dispatch, getState,{getFirebase}) => {\r\n        //Logs user in\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        \r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR',err});\r\n        });\r\n    }\r\n}\r\nexport const signOut = () => {\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\nexport const signUp = (newUser) => {\r\n    return (dispatch,getState,{getFirebase,getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then(resp =>{\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName:newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials:newUser.firstName[0] + newUser.lastName[0]\r\n            });\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch((err)=> {\r\n            dispatch({type:'SIGNUP_ERROR',err});\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst SignOutLinks = () => {\r\n    return (\r\n        <div>\r\n            <ul className = \"right\">\r\n                <li><NavLink to='/SignUp'>Signup</NavLink></li>\r\n                <li><NavLink to='/SignIn'>Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default SignOutLinks","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = (props) => {\r\n    const {auth,profile } = props;\r\n    //console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo \">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n    return(\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName}{project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project =>{\r\n                return(\r\n                    //Output each project\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                    \r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) =>{\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"z-depth-0\">\r\n                <div className=\"card content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"online users\">\r\n                        {notifications && notifications.map(item =>{//if notification added then it will continue\r\n                            return <li key={item.id}>\r\n                                <span className=\"pink-text\">{item.user} </span>\r\n                                <span>{item.content}</span>\r\n                                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\nexport default Notifications"," import  React,{Component} from 'react'\r\n import ProjectList from '../projects/ProjectLists'\r\n import Notifications from './Notifications'\r\n import {connect} from 'react-redux'\r\n import {firestoreConnect} from 'react-redux-firebase'\r\n import {compose} from 'redux'\r\n import {Redirect} from 'react-router-dom'\r\n\r\n\r\n class Dashboard extends Component {\r\n    render(){\r\n        //console.log(this.props);\r\n        const{projects,auth,notifications} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n const mapStateToProps = (state) => {\r\n     //console.log(state);\r\n     return{\r\n         projects:state.firestore.ordered.projects,\r\n         auth:state.firebase.auth,\r\n         notifications:state.firestore.ordered.notifications\r\n     }\r\n }\r\n\r\n export default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}//limit:shows limited amount of data\r\n    ])\r\n )(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project,auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin'/>\r\n\r\n    if(project) {\r\n        return(\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                        <div className=\"card-action grey lighten-4 grey-text\">\r\n                            <div>Posted by {project.authorFirstName}{project.authorLastName}</div>\r\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state,ownProps) =>{\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return{\r\n        project: project,\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps,null),\r\n    firestoreConnect([{\r\n        collection:'projects'\r\n    }])\r\n)(ProjectDetails) \r\n    \r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state)\r\n  }\r\n  render() {\r\n    const { authError,auth} = this.props;\r\n    if (auth.uid) return <Redirect to='/'/>\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"center red-text\">\r\n              { authError ? <p>{authError}</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    authError: state.auth.authError,//mapped to props on this comp\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds))//allows us to parse signIn method\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom' \r\nimport {connect} from 'react-redux'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName:'',\r\n        lastName:'',\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        const {auth,authError} = this.props;\r\n        if(auth.uid) return <Redirect to ='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 x-depth-0\">Sign Up</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n       signUp:(newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState,{getFirebase,getFirestore}) => {\r\n        //make async call to DB\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        console.log(profile);\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName:profile.firstName,\r\n            authorLastName :profile.lastName,\r\n            authorId:authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT_SUCCESS'});\r\n        }).catch(err => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR',err});\r\n        });\r\n    }\r\n};\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {createProject} from '../../store/actions/projectActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title:'',\r\n        content:'',\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.createProject(this.state); \r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const{auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create a new Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id='title' onChange={this.handleChange}/>\r\n                        <label htmlFor=\"title\">ProjectTitle</label>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                    </div>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)\r\n","import React from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\"> \n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component = {Dashboard}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route path='/SignIn' component = {SignIn}/>\n          <Route path='/SignUp' component = {SignUp}/>\n          <Route path='/CreateProject' component = {CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state=initState,action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error');\r\n            return{\r\n                ...state,\r\n                authError:'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return{\r\n                authError:null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return{\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                authError:action.err.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\n\r\nconst projectReducer = (state=initState,action)=>{\r\n    switch (action.type){\r\n        case 'CREATE_PROJECT_SUCCESS':\r\n            console.log('create project success');\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error');\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project:projectReducer,\r\n    firestore:firestoreReducer,\r\n    firebase:firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBWGVy49wvYcIbe3qveepLQH9xpEyTZYqE\",\r\n    authDomain: \"net-ninja-marioplan-e6f3b.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-e6f3b.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-e6f3b\",\r\n    storageBucket: \"net-ninja-marioplan-e6f3b.appspot.com\",\r\n    messagingSenderId: \"941854541280\",\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({/*..Timestamp...*/});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore,applyMiddleware,compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reactReduxFirebase(fbConfig,{userProfile: 'users',useFirestoreForProfile:true,attachAuthIsReady:true}),//redux binding for firebase,\n        reduxFirestore(fbConfig)//redux binding for firestore\n    )\n);\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}